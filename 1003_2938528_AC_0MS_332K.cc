// POJ 1003 Hangover http://poj.org/problem?id=1003
/**
NO any technical skills, but search the predefined dictionary
*/
#include <iostream>
#include <stdlib.h>

using namespace std ;

double fResult[280] = { 0 } ;

int main(int argc, char** argv)
{
    fResult[0] =     0.00000000 ;
    fResult[1] =     0.50000000 ;
    fResult[2] =     0.83333337 ;
    fResult[3] =     1.0833334 ;
    fResult[4] =     1.2833334 ;
    fResult[5] =     1.4500000 ;
    fResult[6] =     1.5928572 ;
    fResult[7] =     1.7178572 ;
    fResult[8] =     1.8289684 ;
    fResult[9] =     1.9289684 ;
    fResult[10] =     2.0198774 ;
    fResult[11] =     2.1032107 ;
    fResult[12] =     2.1801338 ;
    fResult[13] =     2.2515624 ;
    fResult[14] =     2.3182290 ;
    fResult[15] =     2.3807290 ;
    fResult[16] =     2.4395525 ;
    fResult[17] =     2.4951081 ;
    fResult[18] =     2.5477397 ;
    fResult[19] =     2.5977397 ;
    fResult[20] =     2.6453588 ;
    fResult[21] =     2.6908133 ;
    fResult[22] =     2.7342916 ;
    fResult[23] =     2.7759583 ;
    fResult[24] =     2.8159583 ;
    fResult[25] =     2.8544197 ;
    fResult[26] =     2.8914568 ;
    fResult[27] =     2.9271712 ;
    fResult[28] =     2.9616539 ;
    fResult[29] =     2.9949872 ;
    fResult[30] =     3.0272453 ;
    fResult[31] =     3.0584953 ;
    fResult[32] =     3.0887983 ;
    fResult[33] =     3.1182101 ;
    fResult[34] =     3.1467814 ;
    fResult[35] =     3.1745591 ;
    fResult[36] =     3.2015862 ;
    fResult[37] =     3.2279019 ;
    fResult[38] =     3.2535429 ;
    fResult[39] =     3.2785430 ;
    fResult[40] =     3.3029332 ;
    fResult[41] =     3.3267426 ;
    fResult[42] =     3.3499985 ;
    fResult[43] =     3.3727257 ;
    fResult[44] =     3.3949480 ;
    fResult[45] =     3.4166873 ;
    fResult[46] =     3.4379640 ;
    fResult[47] =     3.4587972 ;
    fResult[48] =     3.4792054 ;
    fResult[49] =     3.4992054 ;
    fResult[50] =     3.5188131 ;
    fResult[51] =     3.5380440 ;
    fResult[52] =     3.5569119 ;
    fResult[53] =     3.5754304 ;
    fResult[54] =     3.5936122 ;
    fResult[55] =     3.6114693 ;
    fResult[56] =     3.6290131 ;
    fResult[57] =     3.6462545 ;
    fResult[58] =     3.6632037 ;
    fResult[59] =     3.6798704 ;
    fResult[60] =     3.6962638 ;
    fResult[61] =     3.7123928 ;
    fResult[62] =     3.7282658 ;
    fResult[63] =     3.7438908 ;
    fResult[64] =     3.7592754 ;
    fResult[65] =     3.7744269 ;
    fResult[66] =     3.7893524 ;
    fResult[67] =     3.8040583 ;
    fResult[68] =     3.8185511 ;
    fResult[69] =     3.8328369 ;
    fResult[70] =     3.8469214 ;
    fResult[71] =     3.8608103 ;
    fResult[72] =     3.8745089 ;
    fResult[73] =     3.8880224 ;
    fResult[74] =     3.9013557 ;
    fResult[75] =     3.9145136 ;
    fResult[76] =     3.9275005 ;
    fResult[77] =     3.9403210 ;
    fResult[78] =     3.9529791 ;
    fResult[79] =     3.9654791 ;
    fResult[80] =     3.9778249 ;
    fResult[81] =     3.9900200 ;
    fResult[82] =     4.0020680 ;
    fResult[83] =     4.0139728 ;
    fResult[84] =     4.0257373 ;
    fResult[85] =     4.0373650 ;
    fResult[86] =     4.0488591 ;
    fResult[87] =     4.0602226 ;
    fResult[88] =     4.0714588 ;
    fResult[89] =     4.0825701 ;
    fResult[90] =     4.0935593 ;
    fResult[91] =     4.1044288 ;
    fResult[92] =     4.1151814 ;
    fResult[93] =     4.1258197 ;
    fResult[94] =     4.1363459 ;
    fResult[95] =     4.1467624 ;
    fResult[96] =     4.1570716 ;
    fResult[97] =     4.1672759 ;
    fResult[98] =     4.1773767 ;
    fResult[99] =     4.1873770 ;
    fResult[100] =     4.1972780 ;
    fResult[101] =     4.2070818 ;
    fResult[102] =     4.2167907 ;
    fResult[103] =     4.2264061 ;
    fResult[104] =     4.2359300 ;
    fResult[105] =     4.2453637 ;
    fResult[106] =     4.2547097 ;
    fResult[107] =     4.2639689 ;
    fResult[108] =     4.2731433 ;
    fResult[109] =     4.2822342 ;
    fResult[110] =     4.2912431 ;
    fResult[111] =     4.3001719 ;
    fResult[112] =     4.3090215 ;
    fResult[113] =     4.3177934 ;
    fResult[114] =     4.3264890 ;
    fResult[115] =     4.3351097 ;
    fResult[116] =     4.3436565 ;
    fResult[117] =     4.3521309 ;
    fResult[118] =     4.3605342 ;
    fResult[119] =     4.3688674 ;
    fResult[120] =     4.3771319 ;
    fResult[121] =     4.3853288 ;
    fResult[122] =     4.3934588 ;
    fResult[123] =     4.4015236 ;
    fResult[124] =     4.4095235 ;
    fResult[125] =     4.4174600 ;
    fResult[126] =     4.4253340 ;
    fResult[127] =     4.4331465 ;
    fResult[128] =     4.4408984 ;
    fResult[129] =     4.4485908 ;
    fResult[130] =     4.4562244 ;
    fResult[131] =     4.4638004 ;
    fResult[132] =     4.4713192 ;
    fResult[133] =     4.4787817 ;
    fResult[134] =     4.4861889 ;
    fResult[135] =     4.4935417 ;
    fResult[136] =     4.5008411 ;
    fResult[137] =     4.5080876 ;
    fResult[138] =     4.5152817 ;
    fResult[139] =     4.5224247 ;
    fResult[140] =     4.5295167 ;
    fResult[141] =     4.5365591 ;
    fResult[142] =     4.5435519 ;
    fResult[143] =     4.5504966 ;
    fResult[144] =     4.5573931 ;
    fResult[145] =     4.5642424 ;
    fResult[146] =     4.5710449 ;
    fResult[147] =     4.5778017 ;
    fResult[148] =     4.5845132 ;
    fResult[149] =     4.5911798 ;
    fResult[150] =     4.5978022 ;
    fResult[151] =     4.6043811 ;
    fResult[152] =     4.6109171 ;
    fResult[153] =     4.6174107 ;
    fResult[154] =     4.6238623 ;
    fResult[155] =     4.6302724 ;
    fResult[156] =     4.6366420 ;
    fResult[157] =     4.6429710 ;
    fResult[158] =     4.6492605 ;
    fResult[159] =     4.6555104 ;
    fResult[160] =     4.6617217 ;
    fResult[161] =     4.6678944 ;
    fResult[162] =     4.6740294 ;
    fResult[163] =     4.6801271 ;
    fResult[164] =     4.6861877 ;
    fResult[165] =     4.6922116 ;
    fResult[166] =     4.6981997 ;
    fResult[167] =     4.7041521 ;
    fResult[168] =     4.7100692 ;
    fResult[169] =     4.7159514 ;
    fResult[170] =     4.7217994 ;
    fResult[171] =     4.7276134 ;
    fResult[172] =     4.7333937 ;
    fResult[173] =     4.7391410 ;
    fResult[174] =     4.7448554 ;
    fResult[175] =     4.7505374 ;
    fResult[176] =     4.7561870 ;
    fResult[177] =     4.7618051 ;
    fResult[178] =     4.7673917 ;
    fResult[179] =     4.7729473 ;
    fResult[180] =     4.7784719 ;
    fResult[181] =     4.7839665 ;
    fResult[182] =     4.7894311 ;
    fResult[183] =     4.7948661 ;
    fResult[184] =     4.8002715 ;
    fResult[185] =     4.8056479 ;
    fResult[186] =     4.8109956 ;
    fResult[187] =     4.8163147 ;
    fResult[188] =     4.8216057 ;
    fResult[189] =     4.8268690 ;
    fResult[190] =     4.8321047 ;
    fResult[191] =     4.8373132 ;
    fResult[192] =     4.8424945 ;
    fResult[193] =     4.8476491 ;
    fResult[194] =     4.8527775 ;
    fResult[195] =     4.8578796 ;
    fResult[196] =     4.8629556 ;
    fResult[197] =     4.8680062 ;
    fResult[198] =     4.8730311 ;
    fResult[199] =     4.8780313 ;
    fResult[200] =     4.8830066 ;
    fResult[201] =     4.8879571 ;
    fResult[202] =     4.8928833 ;
    fResult[203] =     4.8977852 ;
    fResult[204] =     4.9026632 ;
    fResult[205] =     4.9075174 ;
    fResult[206] =     4.9123483 ;
    fResult[207] =     4.9171557 ;
    fResult[208] =     4.9219403 ;
    fResult[209] =     4.9267020 ;
    fResult[210] =     4.9314413 ;
    fResult[211] =     4.9361582 ;
    fResult[212] =     4.9408531 ;
    fResult[213] =     4.9455261 ;
    fResult[214] =     4.9501772 ;
    fResult[215] =     4.9548068 ;
    fResult[216] =     4.9594150 ;
    fResult[217] =     4.9640021 ;
    fResult[218] =     4.9685683 ;
    fResult[219] =     4.9731140 ;
    fResult[220] =     4.9776387 ;
    fResult[221] =     4.9821434 ;
    fResult[222] =     4.9866276 ;
    fResult[223] =     4.9910917 ;
    fResult[224] =     4.9955363 ;
    fResult[225] =     4.9999609 ;
    fResult[226] =     5.0043664 ;
    fResult[227] =     5.0087523 ;
    fResult[228] =     5.0131192 ;
    fResult[229] =     5.0174670 ;
    fResult[230] =     5.0217962 ;
    fResult[231] =     5.0261064 ;
    fResult[232] =     5.0303984 ;
    fResult[233] =     5.0346718 ;
    fResult[234] =     5.0389271 ;
    fResult[235] =     5.0431643 ;
    fResult[236] =     5.0473838 ;
    fResult[237] =     5.0515857 ;
    fResult[238] =     5.0557699 ;
    fResult[239] =     5.0599365 ;
    fResult[240] =     5.0640860 ;
    fResult[241] =     5.0682182 ;
    fResult[242] =     5.0723333 ;
    fResult[243] =     5.0764318 ;
    fResult[244] =     5.0805135 ;
    fResult[245] =     5.0845785 ;
    fResult[246] =     5.0886269 ;
    fResult[247] =     5.0926590 ;
    fResult[248] =     5.0966749 ;
    fResult[249] =     5.1006751 ;
    fResult[250] =     5.1046591 ;
    fResult[251] =     5.1086273 ;
    fResult[252] =     5.1125798 ;
    fResult[253] =     5.1165171 ;
    fResult[254] =     5.1204386 ;
    fResult[255] =     5.1243448 ;
    fResult[256] =     5.1282358 ;
    fResult[257] =     5.1321115 ;
    fResult[258] =     5.1359725 ;
    fResult[259] =     5.1398187 ;
    fResult[260] =     5.1436501 ;
    fResult[261] =     5.1474667 ;
    fResult[262] =     5.1512690 ;
    fResult[263] =     5.1550570 ;
    fResult[264] =     5.1588306 ;
    fResult[265] =     5.1625900 ;
    fResult[266] =     5.1663356 ;
    fResult[267] =     5.1700668 ;
    fResult[268] =     5.1737843 ;
    fResult[269] =     5.1774879 ;
    fResult[270] =     5.1811781 ;
    fResult[271] =     5.1848545 ;
    fResult[272] =     5.1885176 ;
    fResult[273] =     5.1921673 ;
    fResult[274] =     5.1958036 ;
    fResult[275] =     5.1994267 ;
    fResult[276] =     5.2030368 ;
    fResult[277] =     5.2066340 ;
    fResult[278] =     5.2102184 ;
    fResult[279] =     5.2137899 ;

    double dInput = 0 ;
    int iCount = 0 ;
    int iIndex = 0 ;
    while (cin >> dInput && (double)(dInput - 0.00) > 0.01)
    {
        iCount = 0 ;
        iIndex = 0 ;
        for(int i = 0; i < 280; ++i)
        {
            if (fResult[i] < dInput)
            {
                continue ;
            }
            else
            {
                printf("%d card(s)\n", i) ;
                break ;
            }
        }
    }

    return 0 ;
}